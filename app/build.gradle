apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "android.example"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                //arguments   '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=gnustl_static'
                cppFlags "-std=c++11", "-frtti", "-fexceptions"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'
            abiFilters.clear()
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }

    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    splits {
        abi {
            enable true //enables the ABIs split mechanism
            reset() //reset the list of ABIs to be included to an empty string
            include 'arm64-v8a', 'armeabi-v7a', 'x86'
            universalApk true
        }
    }
}

repositories {
    maven {
        url 'https://google.bintray.com/tensorflow'
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name: 'tensorflow-lite', ext: 'aar')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-annotations:25.3.1'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9'
    implementation('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.github.moondroid.coverflow:library:1.0'
    implementation 'com.squareup.picasso:picasso:2.5.0'

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'com.valdesekamdem.library:md-toast:0.9.0'
    implementation 'com.android.support:cardview-v7:+'
    implementation 'com.tuyenmonkey:mkloader:1.4.0'
    implementation 'com.github.Binary-Finery:Bungee:master-SNAPSHOT'
    implementation('com.alibaba.android:ultraviewpager:1.0.7.7@aar') {
        transitive = true
    }
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'hanks.xyz:htextview-library:0.1.5'


    //implementation 'com.github.msayan:otp-view:v1.0.2'
    implementation 'com.github.mukeshsolanki:android-otpview-pinview:1.1.0'
    implementation 'com.arvind.otpview:otp-view:0.0.4'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation "com.mlsdev.animatedrv:library:2.0.0"
    implementation 'com.android.support:multidex:1.0.3'

    implementation project(':openCVLibrary341')
//    compile 'org.tensorflow:tensorflow-lite:+'
    implementation project(':macelibrary')
    testImplementation 'junit:junit:4.12'

    /*configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "androidx") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "${targetSdk}.+"
                }
            }
        }
    }*/
}
